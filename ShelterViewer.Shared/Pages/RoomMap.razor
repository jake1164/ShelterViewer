@page "/roommap"
@using ShelterViewer.Shared.Components.Rooms

@inject VaultService VaultService
@inject NavigationManager NavigationManager
@inject IDialogService DialogService

<h3>Vault Layout</h3>

<div class="grid-container">
    @foreach(var roomList in Shelter)
    {
        @foreach(Room room in roomList.Value.OrderBy(c => c.col))
        {
            <div class="grid-item"
                 style="grid-column: @(room.col + 1) / span @room.Size;
                grid-row: @(room.row + 1)">
                <MudText>@($"{room.Name} (col: {room.col}, size: {room.Size})")</MudText>
            </div>
        }
    }
</div>

@foreach (var item in Shelter)
{
    <MudStack Row="true">
        @foreach (Room room in item.Value.OrderBy(c => c.col))
        {
            <MudText>@room.row @room.col @room.Name</MudText>
        }
    </MudStack>
}

<style>
    .grid-container {
        display: grid;
        grid-template-columns: repeat(26, 1fr);
        grid-auto-rows: minmax(50px, auto);
        gap: 2px;
    }

    .grid-item {
        border: 1px solid #ccc;
        text-align: center;
        background-color: #f5f5f5;
        padding: 10px;
        color: black;
        background-color: lime;
    }
</style>

@code {
    Dictionary<int, List<Room>> Shelter { get; set; } = new();

    protected override void OnInitialized()
    {
        if (VaultService.IsVaultEmpty())
        {
            NavigationManager.NavigateTo("/");
        }

        Shelter = VaultService.Rooms
            .GroupBy(r => r.row)
            .ToDictionary(g => g.Key, g => g.ToList());
    }
}
