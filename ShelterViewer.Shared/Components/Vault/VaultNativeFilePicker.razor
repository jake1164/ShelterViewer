@using MudBlazor
@inherits ComponentBase
@inject VaultService VaultService
@inject IVaultFileService VaultFileService

<MudButton Variant="Variant.Filled"
		   Color="Color.Primary"
		   Disabled="@Disabled"
		   OnClick="LoadVaultFromNativeAsync">
	Open Vault File
</MudButton>
<MudText Typo="Typo.caption" Color="Color.Secondary">
	Native picker supports encrypted .sav and exported .json files.
</MudText>

@code {
	[Parameter] public bool Disabled { get; set; }
	[Parameter] public EventCallback OnVaultLoaded { get; set; }

	private async Task LoadVaultFromNativeAsync()
	{
		try
		{
			var jsonString = await VaultFileService.OpenVaultAsync(default);
			if (!string.IsNullOrWhiteSpace(jsonString))
			{
				VaultService.InitializeVault(jsonString);
				await OnVaultLoaded.InvokeAsync();
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Unable to load vault due to exception {ex.Message}", ex);
		}
	}
}
