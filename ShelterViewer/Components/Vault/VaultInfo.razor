
@inject Services.VaultService VaultService

<MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Align="Align.Center" Typo="Typo.h3">Vault @VaultService.Name</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudTooltip Text="Unload Shelter">
                <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default" @onclick="@(() => UnloadVault?.Invoke())" />
            </MudTooltip>           
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent>
            <MudText>Unopened Lunch Boxes: @VaultService.LunchBoxes</MudText>
            <MudText>Unopened Pet Carrier: @VaultService.PetCarriers</MudText>
            <MudText>Unopened Mr Handy: @VaultService.MrHandy</MudText>
    
            <MudText>Unopened Starter Pack: @VaultService.StarterPacks</MudText>
            <MudText>Stim Packs: @VaultService.StimPacks</MudText>
            <MudText>RadAway: @VaultService.RadAways</MudText>
    </MudCardContent>
    
</MudCard>
@code {
    [Parameter, EditorRequired]
    public Action? UnloadVault { get; set; }

    protected override void OnInitialized()
    {
        VaultService.OnVaultChanged += OnVaultChanged;
    }

    private void OnVaultChanged()
    {
        StateHasChanged();
    }
}
